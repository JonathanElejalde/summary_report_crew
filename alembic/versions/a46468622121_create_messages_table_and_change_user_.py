"""create_messages_table_and_change_user_id_for_phone

Revision ID: a46468622121
Revises: f2286f334b57
Create Date: 2025-02-26 17:04:48.011061

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a46468622121'
down_revision: Union[str, None] = 'f2286f334b57'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # FIRST create the enum types before using them
    op.execute("""
        CREATE TYPE jobfrequency AS ENUM (
            'daily',
            'weekly',
            'monthly'
        )
    """)
    
    op.execute("""
        CREATE TYPE jobstatus AS ENUM (
            'pending',
            'running',
            'completed',
            'failed',
            'deactivated'
        )
    """)
    
    # NOW alter the columns
    op.alter_column('scheduled_jobs', 'frequency',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('daily', 'weekly', 'monthly', name='jobfrequency'),
               postgresql_using='frequency::jobfrequency',
               nullable=True)
    
    op.alter_column('scheduled_jobs', 'status',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('pending', 'running', 'completed', 'failed', 'deactivated', name='jobstatus'),
               postgresql_using='status::jobstatus',
               nullable=True)
    
    # Then create messages table
    op.create_table('messages',
        sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), primary_key=True),
        sa.Column('user_id', sa.String(), sa.ForeignKey('users.id', ondelete='CASCADE'), nullable=False),
        sa.Column('direction', sa.String(), nullable=False),
        sa.Column('body', sa.String(), nullable=False),
        sa.Column('media_urls', sa.JSON()),
        sa.Column('status', sa.Enum('received', 'sent', 'delivered', 'read', 'failed', name='message_status')),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now())
    )
    
    # Rest of your migration...


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.alter_column('scheduled_jobs', 'status',
               existing_type=sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'DEACTIVATED', name='jobstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('scheduled_jobs', 'frequency',
               existing_type=sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', name='jobfrequency'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    # ### end Alembic commands ###
